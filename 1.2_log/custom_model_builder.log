auc_roc() missing 3 required positional arguments: 'self', 'y_true_local', and 'y_pred_local'
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 114, in build_and_compile
    metrics_list.append(customized_metrics.auc_roc())
TypeError: auc_roc() missing 3 required positional arguments: 'self', 'y_true_local', and 'y_pred_local'
Can't instantiate abstract class customized_metrics_auc_roc with abstract methods result, update_state
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 114, in build_and_compile
    metrics_list.append(customized_metrics_auc_roc())
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py", line 154, in __new__
    obj = super(Metric, cls).__new__(cls)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\version_utils.py", line 58, in __new__
    return super(LayerVersionSelector, cls).__new__(cls)
TypeError: Can't instantiate abstract class customized_metrics_auc_roc with abstract methods result, update_state
('Keyword argument not understood:', 'stride')
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 151, in build_and_compile
    classifier_.add(layers.Conv2D(units_layer_1, kernel_size=(kernel_size_y_1, kernel_size_x_1),
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\convolutional.py", line 582, in __init__
    super(Conv2D, self).__init__(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\convolutional.py", line 121, in __init__
    super(Conv, self).__init__(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 294, in __init__
    generic_utils.validate_kwargs(kwargs, allowed_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py", line 792, in validate_kwargs
    raise TypeError(error_message, kwarg)
TypeError: ('Keyword argument not understood:', 'stride')
('Keyword argument not understood:', 'stride')
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 153, in build_and_compile
    classifier_.add(layers.Conv2D(units_layer_1, kernel_size=(kernel_size_y_1, kernel_size_x_1),
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\convolutional.py", line 582, in __init__
    super(Conv2D, self).__init__(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\convolutional.py", line 121, in __init__
    super(Conv, self).__init__(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 294, in __init__
    generic_utils.validate_kwargs(kwargs, allowed_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py", line 792, in validate_kwargs
    raise TypeError(error_message, kwarg)
TypeError: ('Keyword argument not understood:', 'stride')
add() got an unexpected keyword argument 'activity_regularizer_dense_layer_4'
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 184, in build_and_compile
    classifier_.add(layers.Dense(units_dense_layer_4, activation=activation_dense_layer_4),
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
TypeError: add() got an unexpected keyword argument 'activity_regularizer_dense_layer_4'
add() got an unexpected keyword argument 'activity_regularizer'
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 184, in build_and_compile
    classifier_.add(layers.Dense(units_dense_layer_4, activation=activation_dense_layer_4),
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
TypeError: add() got an unexpected keyword argument 'activity_regularizer'
'property' object is not iterable
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 190, in build_and_compile
    classifier_.compile(optimizer=optimizer_function, loss=losses_list, metrics=metrics_list)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 325, in compile
    self._validate_compile(optimizer, metrics, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 1598, in _validate_compile
    for v in getattr(metric, 'variables', []):
TypeError: 'property' object is not iterable
This model has not yet been built. Build the model first by calling `build()` or calling `fit()` with some data, or specify an `input_shape` argument in the first layer(s) for automatic build.
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 192, in build_and_compile
    classifier_.summary()
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\network.py", line 1346, in summary
    raise ValueError('This model has not yet been built. '
ValueError: This model has not yet been built. Build the model first by calling `build()` or calling `fit()` with some data, or specify an `input_shape` argument in the first layer(s) for automatic build.
Input 0 of layer conv2d is incompatible with the layer: expected ndim=4, found ndim=3. Full shape received: [512, 512, 3]
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 189, in build_and_compile
    classifier_.build(input_shape=(input_shape_y, input_shape_x, nof_channels))
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py", line 266, in build
    super(Sequential, self).build(input_shape)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\network.py", line 685, in build
    self.call(x, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py", line 291, in call
    outputs = layer(inputs, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 885, in __call__
    input_spec.assert_input_compatibility(self.input_spec, inputs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py", line 176, in assert_input_compatibility
    raise ValueError('Input ' + str(input_index) + ' of layer ' +
ValueError: Input 0 of layer conv2d is incompatible with the layer: expected ndim=4, found ndim=3. Full shape received: [512, 512, 3]
Negative dimension size caused by subtracting 3 from 2 for '{{node conv2d_2/Conv2D}} = Conv2D[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true](dropout_1/Identity, conv2d_2/Conv2D/ReadVariableOp)' with input shapes: [?,2,2,32], [3,3,32,32].
Traceback (most recent call last):
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 1654, in _create_c_op
    c_op = pywrap_tf_session.TF_FinishOperation(op_desc)
tensorflow.python.framework.errors_impl.InvalidArgumentError: Negative dimension size caused by subtracting 3 from 2 for '{{node conv2d_2/Conv2D}} = Conv2D[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true](dropout_1/Identity, conv2d_2/Conv2D/ReadVariableOp)' with input shapes: [?,2,2,32], [3,3,32,32].

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 169, in build_and_compile
    classifier_.add(layers.Conv2D(units_layer_3,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py", line 213, in add
    output_tensor = layer(self.outputs[0])
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 922, in __call__
    outputs = call_fn(cast_inputs, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\convolutional.py", line 207, in call
    outputs = self._convolution_op(inputs, self.kernel)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 1106, in __call__
    return self.conv_op(inp, filter)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 638, in __call__
    return self.call(inp, filter)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 231, in __call__
    return self.conv_op(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 2006, in conv2d
    return gen_nn_ops.conv2d(input,  # pylint: disable=redefined-builtin
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_nn_ops.py", line 965, in conv2d
    _, _, _op, _outputs = _op_def_library._apply_op_helper(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py", line 742, in _apply_op_helper
    op = g._create_op_internal(op_type_name, inputs, dtypes=None,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 593, in _create_op_internal
    return super(FuncGraph, self)._create_op_internal(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 3319, in _create_op_internal
    ret = Operation(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 1816, in __init__
    self._c_op = _create_c_op(self._graph, node_def, inputs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 1657, in _create_c_op
    raise ValueError(str(e))
ValueError: Negative dimension size caused by subtracting 3 from 2 for '{{node conv2d_2/Conv2D}} = Conv2D[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true](dropout_1/Identity, conv2d_2/Conv2D/ReadVariableOp)' with input shapes: [?,2,2,32], [3,3,32,32].
Negative dimension size caused by subtracting 3 from 2 for '{{node conv2d_2/Conv2D}} = Conv2D[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true](dropout_1/Identity, conv2d_2/Conv2D/ReadVariableOp)' with input shapes: [?,2,2,32], [3,3,32,32].
Traceback (most recent call last):
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 1654, in _create_c_op
    c_op = pywrap_tf_session.TF_FinishOperation(op_desc)
tensorflow.python.framework.errors_impl.InvalidArgumentError: Negative dimension size caused by subtracting 3 from 2 for '{{node conv2d_2/Conv2D}} = Conv2D[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true](dropout_1/Identity, conv2d_2/Conv2D/ReadVariableOp)' with input shapes: [?,2,2,32], [3,3,32,32].

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 169, in build_and_compile
    classifier_.add(layers.Conv2D(units_layer_3,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py", line 213, in add
    output_tensor = layer(self.outputs[0])
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 922, in __call__
    outputs = call_fn(cast_inputs, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\convolutional.py", line 207, in call
    outputs = self._convolution_op(inputs, self.kernel)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 1106, in __call__
    return self.conv_op(inp, filter)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 638, in __call__
    return self.call(inp, filter)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 231, in __call__
    return self.conv_op(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 2006, in conv2d
    return gen_nn_ops.conv2d(input,  # pylint: disable=redefined-builtin
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_nn_ops.py", line 965, in conv2d
    _, _, _op, _outputs = _op_def_library._apply_op_helper(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py", line 742, in _apply_op_helper
    op = g._create_op_internal(op_type_name, inputs, dtypes=None,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 593, in _create_op_internal
    return super(FuncGraph, self)._create_op_internal(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 3319, in _create_op_internal
    ret = Operation(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 1816, in __init__
    self._c_op = _create_c_op(self._graph, node_def, inputs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 1657, in _create_c_op
    raise ValueError(str(e))
ValueError: Negative dimension size caused by subtracting 3 from 2 for '{{node conv2d_2/Conv2D}} = Conv2D[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true](dropout_1/Identity, conv2d_2/Conv2D/ReadVariableOp)' with input shapes: [?,2,2,32], [3,3,32,32].
Negative dimension size caused by subtracting 3 from 2 for '{{node conv2d_3/Conv2D}} = Conv2D[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true](dropout_2/Identity, conv2d_3/Conv2D/ReadVariableOp)' with input shapes: [?,2,2,32], [3,3,32,32].
Traceback (most recent call last):
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 1654, in _create_c_op
    c_op = pywrap_tf_session.TF_FinishOperation(op_desc)
tensorflow.python.framework.errors_impl.InvalidArgumentError: Negative dimension size caused by subtracting 3 from 2 for '{{node conv2d_3/Conv2D}} = Conv2D[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true](dropout_2/Identity, conv2d_3/Conv2D/ReadVariableOp)' with input shapes: [?,2,2,32], [3,3,32,32].

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 176, in build_and_compile
    classifier_.add(layers.Conv2D(units_layer_4,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py", line 213, in add
    output_tensor = layer(self.outputs[0])
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 922, in __call__
    outputs = call_fn(cast_inputs, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\convolutional.py", line 207, in call
    outputs = self._convolution_op(inputs, self.kernel)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 1106, in __call__
    return self.conv_op(inp, filter)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 638, in __call__
    return self.call(inp, filter)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 231, in __call__
    return self.conv_op(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 2006, in conv2d
    return gen_nn_ops.conv2d(input,  # pylint: disable=redefined-builtin
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_nn_ops.py", line 965, in conv2d
    _, _, _op, _outputs = _op_def_library._apply_op_helper(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py", line 742, in _apply_op_helper
    op = g._create_op_internal(op_type_name, inputs, dtypes=None,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 593, in _create_op_internal
    return super(FuncGraph, self)._create_op_internal(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 3319, in _create_op_internal
    ret = Operation(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 1816, in __init__
    self._c_op = _create_c_op(self._graph, node_def, inputs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 1657, in _create_c_op
    raise ValueError(str(e))
ValueError: Negative dimension size caused by subtracting 3 from 2 for '{{node conv2d_3/Conv2D}} = Conv2D[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true](dropout_2/Identity, conv2d_3/Conv2D/ReadVariableOp)' with input shapes: [?,2,2,32], [3,3,32,32].
categorical_crossentropy() missing 2 required positional arguments: 'y_true' and 'y_pred'
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 108, in build_and_compile
    losses_list.append(losses.categorical_crossentropy())
TypeError: categorical_crossentropy() missing 2 required positional arguments: 'y_true' and 'y_pred'
categorical_hinge() missing 2 required positional arguments: 'y_true' and 'y_pred'
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 110, in build_and_compile
    losses_list.append(losses.categorical_hinge())
TypeError: categorical_hinge() missing 2 required positional arguments: 'y_true' and 'y_pred'
OOM when allocating tensor with shape[516128,2048] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc [Op:Mul]
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 205, in build_and_compile
    classifier_.add(layers.Dense(units_dense_layer_4, activation=activation_dense_layer_4,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py", line 213, in add
    output_tensor = layer(self.outputs[0])
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 897, in __call__
    self._maybe_build(inputs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 2416, in _maybe_build
    self.build(input_shapes)  # pylint:disable=not-callable
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\core.py", line 1158, in build
    self.kernel = self.add_weight(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 560, in add_weight
    variable = self._add_variable_with_custom_getter(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 738, in _add_variable_with_custom_getter
    new_variable = getter(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer_utils.py", line 129, in make_variable
    return tf_variables.VariableV1(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\variables.py", line 259, in __call__
    return cls._variable_v1_call(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\variables.py", line 205, in _variable_v1_call
    return previous_getter(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\variables.py", line 198, in <lambda>
    previous_getter = lambda **kwargs: default_variable_creator(None, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\variable_scope.py", line 2584, in default_variable_creator
    return resource_variable_ops.ResourceVariable(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\variables.py", line 263, in __call__
    return super(VariableMetaclass, cls).__call__(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\resource_variable_ops.py", line 1423, in __init__
    self._init_from_args(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\resource_variable_ops.py", line 1567, in _init_from_args
    initial_value() if init_from_fn else initial_value,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer_utils.py", line 121, in <lambda>
    init_val = lambda: initializer(shape, dtype=dtype)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\init_ops_v2.py", line 558, in __call__
    return self._random_generator.random_uniform(shape, -limit, limit, dtype)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\init_ops_v2.py", line 1067, in random_uniform
    return op(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\random_ops.py", line 301, in random_uniform
    result = math_ops.add(result * (maxval - minval), minval, name=name)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\math_ops.py", line 984, in binary_op_wrapper
    return func(x, y, name=name)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\math_ops.py", line 1283, in _mul_dispatch
    return gen_math_ops.mul(x, y, name=name)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_math_ops.py", line 6089, in mul
    _ops.raise_from_not_ok_status(e, name)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 6653, in raise_from_not_ok_status
    six.raise_from(core._status_to_exception(e.code, message), None)
  File "<string>", line 3, in raise_from
tensorflow.python.framework.errors_impl.ResourceExhaustedError: OOM when allocating tensor with shape[516128,2048] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc [Op:Mul]
If using `weights` as `"imagenet"` with `include_top` as true, `classes` should be 1000
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 225, in build_and_compile
    classifier_ = tf.keras.applications.EfficientNetB2(include_top=True, weights='imagenet',
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\applications\efficientnet.py", line 579, in EfficientNetB2
    return EfficientNet(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\applications\efficientnet.py", line 279, in EfficientNet
    raise ValueError('If using `weights` as `"imagenet"` with `include_top`'
ValueError: If using `weights` as `"imagenet"` with `include_top` as true, `classes` should be 1000
'metrics_1'
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 230, in build_and_compile
    metrics=local_hyperparameters['metrics_1'])
KeyError: 'metrics_1'
name 'kwargs' is not defined
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 188, in build_and_compile
    depthwise_constraint=None, bias_constraint=None, **kwargs))
NameError: name 'kwargs' is not defined
add() got an unexpected keyword argument 'kernel_initializer'
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 180, in build_and_compile
    classifier_.add(layers.Conv2D(units_layer_1, kernel_size=(kernel_size_y_1, kernel_size_x_1),
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 459, in _method_wrapper
    result = method(self, *args, **kwargs)
TypeError: add() got an unexpected keyword argument 'kernel_initializer'
add() got an unexpected keyword argument 'kernel_initializer'
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 233, in build_and_compile
    classifier_.add(layers.Dense(units_dense_layer_4, activation=activation_dense_layer_4,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 459, in _method_wrapper
    result = method(self, *args, **kwargs)
TypeError: add() got an unexpected keyword argument 'kernel_initializer'
Negative dimension size caused by subtracting 3 from 2 for '{{node conv2d_3/Conv2D}} = Conv2D[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true](dropout_2/cond/Identity, conv2d_3/Conv2D/ReadVariableOp)' with input shapes: [?,2,2,4], [3,3,4,4].
Traceback (most recent call last):
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 1838, in _create_c_op
    c_op = pywrap_tf_session.TF_FinishOperation(op_desc)
tensorflow.python.framework.errors_impl.InvalidArgumentError: Negative dimension size caused by subtracting 3 from 2 for '{{node conv2d_3/Conv2D}} = Conv2D[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true](dropout_2/cond/Identity, conv2d_3/Conv2D/ReadVariableOp)' with input shapes: [?,2,2,4], [3,3,4,4].

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 228, in build_and_compile
    classifier_.add(layers.Conv2D(units_layer_4,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 459, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py", line 221, in add
    output_tensor = layer(self.outputs[0])
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 926, in __call__
    return self._functional_construction_call(inputs, args, kwargs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 1118, in _functional_construction_call
    outputs = call_fn(cast_inputs, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\convolutional.py", line 251, in call
    outputs = self._convolution_op(inputs, self.kernel)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\dispatch.py", line 201, in wrapper
    return target(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 1014, in convolution_v2
    return convolution_internal(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 1144, in convolution_internal
    return op(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 2588, in _conv2d_expanded_batch
    return gen_nn_ops.conv2d(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_nn_ops.py", line 976, in conv2d
    _, _, _op, _outputs = _op_def_library._apply_op_helper(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py", line 742, in _apply_op_helper
    op = g._create_op_internal(op_type_name, inputs, dtypes=None,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 591, in _create_op_internal
    return super(FuncGraph, self)._create_op_internal(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 3509, in _create_op_internal
    ret = Operation(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 2000, in __init__
    self._c_op = _create_c_op(self._graph, node_def, inputs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 1841, in _create_c_op
    raise ValueError(str(e))
ValueError: Negative dimension size caused by subtracting 3 from 2 for '{{node conv2d_3/Conv2D}} = Conv2D[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true](dropout_2/cond/Identity, conv2d_3/Conv2D/ReadVariableOp)' with input shapes: [?,2,2,4], [3,3,4,4].
Negative dimension size caused by subtracting 2 from 1 for '{{node average_pooling2d_1/AvgPool}} = AvgPool[T=DT_FLOAT, data_format="NHWC", ksize=[1, 2, 2, 1], padding="VALID", strides=[1, 2, 2, 1]](batch_normalization_5/cond/Identity)' with input shapes: [?,1,1,4].
Traceback (most recent call last):
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 1838, in _create_c_op
    c_op = pywrap_tf_session.TF_FinishOperation(op_desc)
tensorflow.python.framework.errors_impl.InvalidArgumentError: Negative dimension size caused by subtracting 2 from 1 for '{{node average_pooling2d_1/AvgPool}} = AvgPool[T=DT_FLOAT, data_format="NHWC", ksize=[1, 2, 2, 1], padding="VALID", strides=[1, 2, 2, 1]](batch_normalization_5/cond/Identity)' with input shapes: [?,1,1,4].

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 236, in build_and_compile
    classifier_.add(layers.AvgPool2D(pool_size=(pool_size_y_4, pool_size_x_4)))
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 459, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py", line 221, in add
    output_tensor = layer(self.outputs[0])
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 926, in __call__
    return self._functional_construction_call(inputs, args, kwargs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 1118, in _functional_construction_call
    outputs = call_fn(cast_inputs, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\pooling.py", line 295, in call
    outputs = self.pool_function(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\dispatch.py", line 201, in wrapper
    return target(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 4281, in avg_pool
    return gen_nn_ops.avg_pool(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_nn_ops.py", line 84, in avg_pool
    _, _, _op, _outputs = _op_def_library._apply_op_helper(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py", line 742, in _apply_op_helper
    op = g._create_op_internal(op_type_name, inputs, dtypes=None,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 591, in _create_op_internal
    return super(FuncGraph, self)._create_op_internal(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 3509, in _create_op_internal
    ret = Operation(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 2000, in __init__
    self._c_op = _create_c_op(self._graph, node_def, inputs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 1841, in _create_c_op
    raise ValueError(str(e))
ValueError: Negative dimension size caused by subtracting 2 from 1 for '{{node average_pooling2d_1/AvgPool}} = AvgPool[T=DT_FLOAT, data_format="NHWC", ksize=[1, 2, 2, 1], padding="VALID", strides=[1, 2, 2, 1]](batch_normalization_5/cond/Identity)' with input shapes: [?,1,1,4].
Negative dimension size caused by subtracting 2 from 1 for '{{node average_pooling2d_1/AvgPool}} = AvgPool[T=DT_FLOAT, data_format="NHWC", ksize=[1, 2, 2, 1], padding="VALID", strides=[1, 2, 2, 1]](batch_normalization_4/cond/Identity)' with input shapes: [?,1,1,4].
Traceback (most recent call last):
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 1838, in _create_c_op
    c_op = pywrap_tf_session.TF_FinishOperation(op_desc)
tensorflow.python.framework.errors_impl.InvalidArgumentError: Negative dimension size caused by subtracting 2 from 1 for '{{node average_pooling2d_1/AvgPool}} = AvgPool[T=DT_FLOAT, data_format="NHWC", ksize=[1, 2, 2, 1], padding="VALID", strides=[1, 2, 2, 1]](batch_normalization_4/cond/Identity)' with input shapes: [?,1,1,4].

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 236, in build_and_compile
    classifier_.add(layers.AvgPool2D(pool_size=(pool_size_y_4, pool_size_x_4)))
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 459, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py", line 221, in add
    output_tensor = layer(self.outputs[0])
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 926, in __call__
    return self._functional_construction_call(inputs, args, kwargs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 1118, in _functional_construction_call
    outputs = call_fn(cast_inputs, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\pooling.py", line 295, in call
    outputs = self.pool_function(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\dispatch.py", line 201, in wrapper
    return target(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 4281, in avg_pool
    return gen_nn_ops.avg_pool(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_nn_ops.py", line 84, in avg_pool
    _, _, _op, _outputs = _op_def_library._apply_op_helper(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py", line 742, in _apply_op_helper
    op = g._create_op_internal(op_type_name, inputs, dtypes=None,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 591, in _create_op_internal
    return super(FuncGraph, self)._create_op_internal(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 3509, in _create_op_internal
    ret = Operation(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 2000, in __init__
    self._c_op = _create_c_op(self._graph, node_def, inputs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 1841, in _create_c_op
    raise ValueError(str(e))
ValueError: Negative dimension size caused by subtracting 2 from 1 for '{{node average_pooling2d_1/AvgPool}} = AvgPool[T=DT_FLOAT, data_format="NHWC", ksize=[1, 2, 2, 1], padding="VALID", strides=[1, 2, 2, 1]](batch_normalization_4/cond/Identity)' with input shapes: [?,1,1,4].
Negative dimension size caused by subtracting 4 from 3 for '{{node conv2d_1/Conv2D}} = Conv2D[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true](dropout/cond/Identity, conv2d_1/Conv2D/ReadVariableOp)' with input shapes: [?,3,3,16], [4,4,16,8].
Traceback (most recent call last):
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 1838, in _create_c_op
    c_op = pywrap_tf_session.TF_FinishOperation(op_desc)
tensorflow.python.framework.errors_impl.InvalidArgumentError: Negative dimension size caused by subtracting 4 from 3 for '{{node conv2d_1/Conv2D}} = Conv2D[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true](dropout/cond/Identity, conv2d_1/Conv2D/ReadVariableOp)' with input shapes: [?,3,3,16], [4,4,16,8].

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 204, in build_and_compile
    classifier_.add(layers.Conv2D(units_layer_2,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 459, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py", line 221, in add
    output_tensor = layer(self.outputs[0])
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 926, in __call__
    return self._functional_construction_call(inputs, args, kwargs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 1118, in _functional_construction_call
    outputs = call_fn(cast_inputs, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\convolutional.py", line 251, in call
    outputs = self._convolution_op(inputs, self.kernel)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\dispatch.py", line 201, in wrapper
    return target(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 1014, in convolution_v2
    return convolution_internal(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 1144, in convolution_internal
    return op(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 2588, in _conv2d_expanded_batch
    return gen_nn_ops.conv2d(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_nn_ops.py", line 976, in conv2d
    _, _, _op, _outputs = _op_def_library._apply_op_helper(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py", line 742, in _apply_op_helper
    op = g._create_op_internal(op_type_name, inputs, dtypes=None,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 591, in _create_op_internal
    return super(FuncGraph, self)._create_op_internal(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 3509, in _create_op_internal
    ret = Operation(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 2000, in __init__
    self._c_op = _create_c_op(self._graph, node_def, inputs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 1841, in _create_c_op
    raise ValueError(str(e))
ValueError: Negative dimension size caused by subtracting 4 from 3 for '{{node conv2d_1/Conv2D}} = Conv2D[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true](dropout/cond/Identity, conv2d_1/Conv2D/ReadVariableOp)' with input shapes: [?,3,3,16], [4,4,16,8].
Negative dimension size caused by subtracting 3 from 1 for '{{node conv2d_3/Conv2D}} = Conv2D[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true](dropout_2/cond/Identity, conv2d_3/Conv2D/ReadVariableOp)' with input shapes: [?,1,1,4], [3,3,4,4].
Traceback (most recent call last):
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 1838, in _create_c_op
    c_op = pywrap_tf_session.TF_FinishOperation(op_desc)
tensorflow.python.framework.errors_impl.InvalidArgumentError: Negative dimension size caused by subtracting 3 from 1 for '{{node conv2d_3/Conv2D}} = Conv2D[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true](dropout_2/cond/Identity, conv2d_3/Conv2D/ReadVariableOp)' with input shapes: [?,1,1,4], [3,3,4,4].

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 226, in build_and_compile
    classifier_.add(layers.Conv2D(units_layer_4,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 459, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py", line 221, in add
    output_tensor = layer(self.outputs[0])
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 926, in __call__
    return self._functional_construction_call(inputs, args, kwargs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 1118, in _functional_construction_call
    outputs = call_fn(cast_inputs, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\convolutional.py", line 251, in call
    outputs = self._convolution_op(inputs, self.kernel)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\dispatch.py", line 201, in wrapper
    return target(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 1014, in convolution_v2
    return convolution_internal(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 1144, in convolution_internal
    return op(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 2588, in _conv2d_expanded_batch
    return gen_nn_ops.conv2d(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_nn_ops.py", line 976, in conv2d
    _, _, _op, _outputs = _op_def_library._apply_op_helper(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py", line 742, in _apply_op_helper
    op = g._create_op_internal(op_type_name, inputs, dtypes=None,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 591, in _create_op_internal
    return super(FuncGraph, self)._create_op_internal(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 3509, in _create_op_internal
    ret = Operation(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 2000, in __init__
    self._c_op = _create_c_op(self._graph, node_def, inputs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 1841, in _create_c_op
    raise ValueError(str(e))
ValueError: Negative dimension size caused by subtracting 3 from 1 for '{{node conv2d_3/Conv2D}} = Conv2D[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true](dropout_2/cond/Identity, conv2d_3/Conv2D/ReadVariableOp)' with input shapes: [?,1,1,4], [3,3,4,4].
Unknown activation function: Relu
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 186, in build_and_compile
    classifier_.add(layers.Conv2D(units_layer_1, kernel_size=(kernel_size_y_1, kernel_size_x_1),
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\convolutional.py", line 665, in __init__
    activation=activations.get(activation),
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\dispatch.py", line 201, in wrapper
    return target(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\activations.py", line 529, in get
    return deserialize(identifier)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\dispatch.py", line 201, in wrapper
    return target(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\activations.py", line 488, in deserialize
    return deserialize_keras_object(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py", line 377, in deserialize_keras_object
    raise ValueError(
ValueError: Unknown activation function: Relu
swish() missing 1 required positional argument: 'x'
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 215, in build_and_compile
    classifier_.add(tf.keras.activations.swish())
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\dispatch.py", line 201, in wrapper
    return target(*args, **kwargs)
TypeError: swish() missing 1 required positional argument: 'x'
('Keyword argument not understood:', 'pool_size')
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 216, in build_and_compile
    classifier_.add(layers.GlobalAveragePooling2D(pool_size=(pool_size_y_4, pool_size_x_4)))
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\pooling.py", line 862, in __init__
    super(GlobalPooling2D, self).__init__(**kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 459, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 318, in __init__
    generic_utils.validate_kwargs(kwargs, allowed_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py", line 778, in validate_kwargs
    raise TypeError(error_message, kwarg)
TypeError: ('Keyword argument not understood:', 'pool_size')
add() got an unexpected keyword argument 'kernel_initializer'
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 235, in build_and_compile
    classifier_.add(layers.Dense(units_final_layer, activation=activation_final_layer),
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 459, in _method_wrapper
    result = method(self, *args, **kwargs)
TypeError: add() got an unexpected keyword argument 'kernel_initializer'
__init__() got multiple values for argument 'kernel_size'
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 196, in build_and_compile
    classifier_.add(layers.DepthwiseConv2D(units_layer_2,
TypeError: __init__() got multiple values for argument 'kernel_size'
__init__() got multiple values for argument 'kernel_size'
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 196, in build_and_compile
    classifier_.add(layers.DepthwiseConv2D(units_layer_2,
TypeError: __init__() got multiple values for argument 'kernel_size'
__init__() got multiple values for argument 'kernel_size'
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 196, in build_and_compile
    classifier_.add(layers.DepthwiseConv2D(units_layer_2,
TypeError: __init__() got multiple values for argument 'kernel_size'
__init__() got multiple values for argument 'kernel_size'
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 196, in build_and_compile
    classifier_.add(layers.DepthwiseConv2D(units_layer_2,
TypeError: __init__() got multiple values for argument 'kernel_size'
Negative dimension size caused by subtracting 64 from 63 for '{{node depthwise_conv2d/depthwise}} = DepthwiseConv2dNative[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1]](dropout/cond/Identity, depthwise_conv2d/depthwise/ReadVariableOp)' with input shapes: [?,63,63,64], [64,64,64,1].
Traceback (most recent call last):
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 1838, in _create_c_op
    c_op = pywrap_tf_session.TF_FinishOperation(op_desc)
tensorflow.python.framework.errors_impl.InvalidArgumentError: Negative dimension size caused by subtracting 64 from 63 for '{{node depthwise_conv2d/depthwise}} = DepthwiseConv2dNative[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1]](dropout/cond/Identity, depthwise_conv2d/depthwise/ReadVariableOp)' with input shapes: [?,63,63,64], [64,64,64,1].

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 196, in build_and_compile
    classifier_.add(layers.DepthwiseConv2D(units_layer_2,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 459, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py", line 221, in add
    output_tensor = layer(self.outputs[0])
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 926, in __call__
    return self._functional_construction_call(inputs, args, kwargs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 1118, in _functional_construction_call
    outputs = call_fn(cast_inputs, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\convolutional.py", line 2401, in call
    outputs = backend.depthwise_conv2d(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\dispatch.py", line 201, in wrapper
    return target(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\backend.py", line 5363, in depthwise_conv2d
    x = nn.depthwise_conv2d(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\dispatch.py", line 201, in wrapper
    return target(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_impl.py", line 860, in depthwise_conv2d
    return nn_ops.with_space_to_batch(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\dispatch.py", line 201, in wrapper
    return target(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 572, in with_space_to_batch
    return new_op(input, None)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 743, in __call__
    return self.call(inp, filter)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 562, in <lambda>
    return lambda inp, _: op(inp, num_spatial_dims, padding)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_impl.py", line 852, in op
    return nn_ops.depthwise_conv2d_native(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\dispatch.py", line 201, in wrapper
    return target(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 2832, in depthwise_conv2d_native
    return gen_nn_ops.depthwise_conv2d_native(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_nn_ops.py", line 2227, in depthwise_conv2d_native
    _, _, _op, _outputs = _op_def_library._apply_op_helper(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py", line 742, in _apply_op_helper
    op = g._create_op_internal(op_type_name, inputs, dtypes=None,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 591, in _create_op_internal
    return super(FuncGraph, self)._create_op_internal(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 3509, in _create_op_internal
    ret = Operation(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 2000, in __init__
    self._c_op = _create_c_op(self._graph, node_def, inputs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 1841, in _create_c_op
    raise ValueError(str(e))
ValueError: Negative dimension size caused by subtracting 64 from 63 for '{{node depthwise_conv2d/depthwise}} = DepthwiseConv2dNative[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1]](dropout/cond/Identity, depthwise_conv2d/depthwise/ReadVariableOp)' with input shapes: [?,63,63,64], [64,64,64,1].
Negative dimension size caused by subtracting 64 from 63 for '{{node depthwise_conv2d/depthwise}} = DepthwiseConv2dNative[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1]](dropout/cond/Identity, depthwise_conv2d/depthwise/ReadVariableOp)' with input shapes: [?,63,63,64], [64,64,64,1].
Traceback (most recent call last):
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 1838, in _create_c_op
    c_op = pywrap_tf_session.TF_FinishOperation(op_desc)
tensorflow.python.framework.errors_impl.InvalidArgumentError: Negative dimension size caused by subtracting 64 from 63 for '{{node depthwise_conv2d/depthwise}} = DepthwiseConv2dNative[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1]](dropout/cond/Identity, depthwise_conv2d/depthwise/ReadVariableOp)' with input shapes: [?,63,63,64], [64,64,64,1].

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 196, in build_and_compile
    classifier_.add(layers.DepthwiseConv2D(units_layer_2,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 459, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py", line 221, in add
    output_tensor = layer(self.outputs[0])
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 926, in __call__
    return self._functional_construction_call(inputs, args, kwargs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 1118, in _functional_construction_call
    outputs = call_fn(cast_inputs, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\convolutional.py", line 2401, in call
    outputs = backend.depthwise_conv2d(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\dispatch.py", line 201, in wrapper
    return target(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\backend.py", line 5363, in depthwise_conv2d
    x = nn.depthwise_conv2d(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\dispatch.py", line 201, in wrapper
    return target(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_impl.py", line 860, in depthwise_conv2d
    return nn_ops.with_space_to_batch(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\dispatch.py", line 201, in wrapper
    return target(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 572, in with_space_to_batch
    return new_op(input, None)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 743, in __call__
    return self.call(inp, filter)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 562, in <lambda>
    return lambda inp, _: op(inp, num_spatial_dims, padding)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_impl.py", line 852, in op
    return nn_ops.depthwise_conv2d_native(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\dispatch.py", line 201, in wrapper
    return target(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 2832, in depthwise_conv2d_native
    return gen_nn_ops.depthwise_conv2d_native(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_nn_ops.py", line 2227, in depthwise_conv2d_native
    _, _, _op, _outputs = _op_def_library._apply_op_helper(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py", line 742, in _apply_op_helper
    op = g._create_op_internal(op_type_name, inputs, dtypes=None,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 591, in _create_op_internal
    return super(FuncGraph, self)._create_op_internal(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 3509, in _create_op_internal
    ret = Operation(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 2000, in __init__
    self._c_op = _create_c_op(self._graph, node_def, inputs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 1841, in _create_c_op
    raise ValueError(str(e))
ValueError: Negative dimension size caused by subtracting 64 from 63 for '{{node depthwise_conv2d/depthwise}} = DepthwiseConv2dNative[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1]](dropout/cond/Identity, depthwise_conv2d/depthwise/ReadVariableOp)' with input shapes: [?,63,63,64], [64,64,64,1].
Negative dimension size caused by subtracting 32 from 31 for '{{node depthwise_conv2d/depthwise}} = DepthwiseConv2dNative[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1]](dropout/cond/Identity, depthwise_conv2d/depthwise/ReadVariableOp)' with input shapes: [?,31,31,64], [32,32,64,1].
Traceback (most recent call last):
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 1838, in _create_c_op
    c_op = pywrap_tf_session.TF_FinishOperation(op_desc)
tensorflow.python.framework.errors_impl.InvalidArgumentError: Negative dimension size caused by subtracting 32 from 31 for '{{node depthwise_conv2d/depthwise}} = DepthwiseConv2dNative[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1]](dropout/cond/Identity, depthwise_conv2d/depthwise/ReadVariableOp)' with input shapes: [?,31,31,64], [32,32,64,1].

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 196, in build_and_compile
    classifier_.add(layers.DepthwiseConv2D(units_layer_2,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 459, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py", line 221, in add
    output_tensor = layer(self.outputs[0])
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 926, in __call__
    return self._functional_construction_call(inputs, args, kwargs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 1118, in _functional_construction_call
    outputs = call_fn(cast_inputs, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\convolutional.py", line 2401, in call
    outputs = backend.depthwise_conv2d(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\dispatch.py", line 201, in wrapper
    return target(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\backend.py", line 5363, in depthwise_conv2d
    x = nn.depthwise_conv2d(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\dispatch.py", line 201, in wrapper
    return target(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_impl.py", line 860, in depthwise_conv2d
    return nn_ops.with_space_to_batch(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\dispatch.py", line 201, in wrapper
    return target(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 572, in with_space_to_batch
    return new_op(input, None)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 743, in __call__
    return self.call(inp, filter)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 562, in <lambda>
    return lambda inp, _: op(inp, num_spatial_dims, padding)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_impl.py", line 852, in op
    return nn_ops.depthwise_conv2d_native(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\dispatch.py", line 201, in wrapper
    return target(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 2832, in depthwise_conv2d_native
    return gen_nn_ops.depthwise_conv2d_native(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_nn_ops.py", line 2227, in depthwise_conv2d_native
    _, _, _op, _outputs = _op_def_library._apply_op_helper(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py", line 742, in _apply_op_helper
    op = g._create_op_internal(op_type_name, inputs, dtypes=None,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 591, in _create_op_internal
    return super(FuncGraph, self)._create_op_internal(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 3509, in _create_op_internal
    ret = Operation(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 2000, in __init__
    self._c_op = _create_c_op(self._graph, node_def, inputs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 1841, in _create_c_op
    raise ValueError(str(e))
ValueError: Negative dimension size caused by subtracting 32 from 31 for '{{node depthwise_conv2d/depthwise}} = DepthwiseConv2dNative[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1]](dropout/cond/Identity, depthwise_conv2d/depthwise/ReadVariableOp)' with input shapes: [?,31,31,64], [32,32,64,1].
Negative dimension size caused by subtracting 32 from 31 for '{{node depthwise_conv2d/depthwise}} = DepthwiseConv2dNative[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1]](dropout/cond/Identity, depthwise_conv2d/depthwise/ReadVariableOp)' with input shapes: [?,31,31,128], [32,32,128,1].
Traceback (most recent call last):
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 1838, in _create_c_op
    c_op = pywrap_tf_session.TF_FinishOperation(op_desc)
tensorflow.python.framework.errors_impl.InvalidArgumentError: Negative dimension size caused by subtracting 32 from 31 for '{{node depthwise_conv2d/depthwise}} = DepthwiseConv2dNative[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1]](dropout/cond/Identity, depthwise_conv2d/depthwise/ReadVariableOp)' with input shapes: [?,31,31,128], [32,32,128,1].

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 196, in build_and_compile
    classifier_.add(layers.DepthwiseConv2D(units_layer_2,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 459, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py", line 221, in add
    output_tensor = layer(self.outputs[0])
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 926, in __call__
    return self._functional_construction_call(inputs, args, kwargs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 1118, in _functional_construction_call
    outputs = call_fn(cast_inputs, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\convolutional.py", line 2401, in call
    outputs = backend.depthwise_conv2d(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\dispatch.py", line 201, in wrapper
    return target(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\backend.py", line 5363, in depthwise_conv2d
    x = nn.depthwise_conv2d(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\dispatch.py", line 201, in wrapper
    return target(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_impl.py", line 860, in depthwise_conv2d
    return nn_ops.with_space_to_batch(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\dispatch.py", line 201, in wrapper
    return target(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 572, in with_space_to_batch
    return new_op(input, None)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 743, in __call__
    return self.call(inp, filter)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 562, in <lambda>
    return lambda inp, _: op(inp, num_spatial_dims, padding)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_impl.py", line 852, in op
    return nn_ops.depthwise_conv2d_native(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\dispatch.py", line 201, in wrapper
    return target(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 2832, in depthwise_conv2d_native
    return gen_nn_ops.depthwise_conv2d_native(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_nn_ops.py", line 2227, in depthwise_conv2d_native
    _, _, _op, _outputs = _op_def_library._apply_op_helper(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py", line 742, in _apply_op_helper
    op = g._create_op_internal(op_type_name, inputs, dtypes=None,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 591, in _create_op_internal
    return super(FuncGraph, self)._create_op_internal(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 3509, in _create_op_internal
    ret = Operation(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 2000, in __init__
    self._c_op = _create_c_op(self._graph, node_def, inputs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 1841, in _create_c_op
    raise ValueError(str(e))
ValueError: Negative dimension size caused by subtracting 32 from 31 for '{{node depthwise_conv2d/depthwise}} = DepthwiseConv2dNative[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1]](dropout/cond/Identity, depthwise_conv2d/depthwise/ReadVariableOp)' with input shapes: [?,31,31,128], [32,32,128,1].
Negative dimension size caused by subtracting 64 from 31 for '{{node depthwise_conv2d/depthwise}} = DepthwiseConv2dNative[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1]](dropout/cond/Identity, depthwise_conv2d/depthwise/ReadVariableOp)' with input shapes: [?,31,31,256], [64,64,256,1].
Traceback (most recent call last):
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 1838, in _create_c_op
    c_op = pywrap_tf_session.TF_FinishOperation(op_desc)
tensorflow.python.framework.errors_impl.InvalidArgumentError: Negative dimension size caused by subtracting 64 from 31 for '{{node depthwise_conv2d/depthwise}} = DepthwiseConv2dNative[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1]](dropout/cond/Identity, depthwise_conv2d/depthwise/ReadVariableOp)' with input shapes: [?,31,31,256], [64,64,256,1].

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 196, in build_and_compile
    classifier_.add(layers.DepthwiseConv2D(units_layer_2,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 459, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py", line 221, in add
    output_tensor = layer(self.outputs[0])
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 926, in __call__
    return self._functional_construction_call(inputs, args, kwargs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 1118, in _functional_construction_call
    outputs = call_fn(cast_inputs, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\convolutional.py", line 2401, in call
    outputs = backend.depthwise_conv2d(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\dispatch.py", line 201, in wrapper
    return target(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\backend.py", line 5363, in depthwise_conv2d
    x = nn.depthwise_conv2d(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\dispatch.py", line 201, in wrapper
    return target(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_impl.py", line 860, in depthwise_conv2d
    return nn_ops.with_space_to_batch(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\dispatch.py", line 201, in wrapper
    return target(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 572, in with_space_to_batch
    return new_op(input, None)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 743, in __call__
    return self.call(inp, filter)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 562, in <lambda>
    return lambda inp, _: op(inp, num_spatial_dims, padding)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_impl.py", line 852, in op
    return nn_ops.depthwise_conv2d_native(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\dispatch.py", line 201, in wrapper
    return target(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 2832, in depthwise_conv2d_native
    return gen_nn_ops.depthwise_conv2d_native(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_nn_ops.py", line 2227, in depthwise_conv2d_native
    _, _, _op, _outputs = _op_def_library._apply_op_helper(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py", line 742, in _apply_op_helper
    op = g._create_op_internal(op_type_name, inputs, dtypes=None,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 591, in _create_op_internal
    return super(FuncGraph, self)._create_op_internal(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 3509, in _create_op_internal
    ret = Operation(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 2000, in __init__
    self._c_op = _create_c_op(self._graph, node_def, inputs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 1841, in _create_c_op
    raise ValueError(str(e))
ValueError: Negative dimension size caused by subtracting 64 from 31 for '{{node depthwise_conv2d/depthwise}} = DepthwiseConv2dNative[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1]](dropout/cond/Identity, depthwise_conv2d/depthwise/ReadVariableOp)' with input shapes: [?,31,31,256], [64,64,256,1].
Negative dimension size caused by subtracting 128 from 31 for '{{node depthwise_conv2d/depthwise}} = DepthwiseConv2dNative[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1]](dropout/cond/Identity, depthwise_conv2d/depthwise/ReadVariableOp)' with input shapes: [?,31,31,128], [128,128,128,1].
Traceback (most recent call last):
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 1838, in _create_c_op
    c_op = pywrap_tf_session.TF_FinishOperation(op_desc)
tensorflow.python.framework.errors_impl.InvalidArgumentError: Negative dimension size caused by subtracting 128 from 31 for '{{node depthwise_conv2d/depthwise}} = DepthwiseConv2dNative[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1]](dropout/cond/Identity, depthwise_conv2d/depthwise/ReadVariableOp)' with input shapes: [?,31,31,128], [128,128,128,1].

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 196, in build_and_compile
    classifier_.add(layers.DepthwiseConv2D(units_layer_2,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 459, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py", line 221, in add
    output_tensor = layer(self.outputs[0])
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 926, in __call__
    return self._functional_construction_call(inputs, args, kwargs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 1118, in _functional_construction_call
    outputs = call_fn(cast_inputs, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\convolutional.py", line 2401, in call
    outputs = backend.depthwise_conv2d(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\dispatch.py", line 201, in wrapper
    return target(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\backend.py", line 5363, in depthwise_conv2d
    x = nn.depthwise_conv2d(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\dispatch.py", line 201, in wrapper
    return target(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_impl.py", line 860, in depthwise_conv2d
    return nn_ops.with_space_to_batch(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\dispatch.py", line 201, in wrapper
    return target(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 572, in with_space_to_batch
    return new_op(input, None)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 743, in __call__
    return self.call(inp, filter)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 562, in <lambda>
    return lambda inp, _: op(inp, num_spatial_dims, padding)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_impl.py", line 852, in op
    return nn_ops.depthwise_conv2d_native(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\dispatch.py", line 201, in wrapper
    return target(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 2832, in depthwise_conv2d_native
    return gen_nn_ops.depthwise_conv2d_native(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_nn_ops.py", line 2227, in depthwise_conv2d_native
    _, _, _op, _outputs = _op_def_library._apply_op_helper(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py", line 742, in _apply_op_helper
    op = g._create_op_internal(op_type_name, inputs, dtypes=None,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 591, in _create_op_internal
    return super(FuncGraph, self)._create_op_internal(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 3509, in _create_op_internal
    ret = Operation(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 2000, in __init__
    self._c_op = _create_c_op(self._graph, node_def, inputs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 1841, in _create_c_op
    raise ValueError(str(e))
ValueError: Negative dimension size caused by subtracting 128 from 31 for '{{node depthwise_conv2d/depthwise}} = DepthwiseConv2dNative[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1]](dropout/cond/Identity, depthwise_conv2d/depthwise/ReadVariableOp)' with input shapes: [?,31,31,128], [128,128,128,1].
Negative dimension size caused by subtracting 128 from 31 for '{{node depthwise_conv2d/depthwise}} = DepthwiseConv2dNative[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1]](dropout/cond/Identity, depthwise_conv2d/depthwise/ReadVariableOp)' with input shapes: [?,31,31,128], [128,128,128,1].
Traceback (most recent call last):
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 1838, in _create_c_op
    c_op = pywrap_tf_session.TF_FinishOperation(op_desc)
tensorflow.python.framework.errors_impl.InvalidArgumentError: Negative dimension size caused by subtracting 128 from 31 for '{{node depthwise_conv2d/depthwise}} = DepthwiseConv2dNative[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1]](dropout/cond/Identity, depthwise_conv2d/depthwise/ReadVariableOp)' with input shapes: [?,31,31,128], [128,128,128,1].

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 196, in build_and_compile
    classifier_.add(layers.DepthwiseConv2D(units_layer_2,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 459, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py", line 221, in add
    output_tensor = layer(self.outputs[0])
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 926, in __call__
    return self._functional_construction_call(inputs, args, kwargs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 1118, in _functional_construction_call
    outputs = call_fn(cast_inputs, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\convolutional.py", line 2401, in call
    outputs = backend.depthwise_conv2d(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\dispatch.py", line 201, in wrapper
    return target(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\backend.py", line 5363, in depthwise_conv2d
    x = nn.depthwise_conv2d(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\dispatch.py", line 201, in wrapper
    return target(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_impl.py", line 860, in depthwise_conv2d
    return nn_ops.with_space_to_batch(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\dispatch.py", line 201, in wrapper
    return target(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 572, in with_space_to_batch
    return new_op(input, None)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 743, in __call__
    return self.call(inp, filter)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 562, in <lambda>
    return lambda inp, _: op(inp, num_spatial_dims, padding)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_impl.py", line 852, in op
    return nn_ops.depthwise_conv2d_native(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\dispatch.py", line 201, in wrapper
    return target(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 2832, in depthwise_conv2d_native
    return gen_nn_ops.depthwise_conv2d_native(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_nn_ops.py", line 2227, in depthwise_conv2d_native
    _, _, _op, _outputs = _op_def_library._apply_op_helper(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py", line 742, in _apply_op_helper
    op = g._create_op_internal(op_type_name, inputs, dtypes=None,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 591, in _create_op_internal
    return super(FuncGraph, self)._create_op_internal(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 3509, in _create_op_internal
    ret = Operation(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 2000, in __init__
    self._c_op = _create_c_op(self._graph, node_def, inputs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 1841, in _create_c_op
    raise ValueError(str(e))
ValueError: Negative dimension size caused by subtracting 128 from 31 for '{{node depthwise_conv2d/depthwise}} = DepthwiseConv2dNative[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1]](dropout/cond/Identity, depthwise_conv2d/depthwise/ReadVariableOp)' with input shapes: [?,31,31,128], [128,128,128,1].
Unknown activation function: Relu
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 225, in build_and_compile
    classifier_.add(layers.Conv2D(units_layer_4,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\convolutional.py", line 665, in __init__
    activation=activations.get(activation),
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\dispatch.py", line 201, in wrapper
    return target(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\activations.py", line 529, in get
    return deserialize(identifier)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\dispatch.py", line 201, in wrapper
    return target(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\activations.py", line 488, in deserialize
    return deserialize_keras_object(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py", line 377, in deserialize_keras_object
    raise ValueError(
ValueError: Unknown activation function: Relu
Negative dimension size caused by subtracting 3 from 1 for '{{node conv2d_5/Conv2D}} = Conv2D[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true](dropout_4/cond/Identity, conv2d_5/Conv2D/ReadVariableOp)' with input shapes: [?,1,1,16], [3,3,16,16].
Traceback (most recent call last):
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 1838, in _create_c_op
    c_op = pywrap_tf_session.TF_FinishOperation(op_desc)
tensorflow.python.framework.errors_impl.InvalidArgumentError: Negative dimension size caused by subtracting 3 from 1 for '{{node conv2d_5/Conv2D}} = Conv2D[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true](dropout_4/cond/Identity, conv2d_5/Conv2D/ReadVariableOp)' with input shapes: [?,1,1,16], [3,3,16,16].

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 247, in build_and_compile
    classifier_.add(layers.Conv2D(units_layer_3,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 459, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py", line 221, in add
    output_tensor = layer(self.outputs[0])
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 926, in __call__
    return self._functional_construction_call(inputs, args, kwargs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 1118, in _functional_construction_call
    outputs = call_fn(cast_inputs, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\convolutional.py", line 251, in call
    outputs = self._convolution_op(inputs, self.kernel)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\dispatch.py", line 201, in wrapper
    return target(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 1014, in convolution_v2
    return convolution_internal(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 1144, in convolution_internal
    return op(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 2588, in _conv2d_expanded_batch
    return gen_nn_ops.conv2d(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_nn_ops.py", line 976, in conv2d
    _, _, _op, _outputs = _op_def_library._apply_op_helper(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py", line 742, in _apply_op_helper
    op = g._create_op_internal(op_type_name, inputs, dtypes=None,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 591, in _create_op_internal
    return super(FuncGraph, self)._create_op_internal(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 3509, in _create_op_internal
    ret = Operation(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 2000, in __init__
    self._c_op = _create_c_op(self._graph, node_def, inputs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 1841, in _create_c_op
    raise ValueError(str(e))
ValueError: Negative dimension size caused by subtracting 3 from 1 for '{{node conv2d_5/Conv2D}} = Conv2D[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true](dropout_4/cond/Identity, conv2d_5/Conv2D/ReadVariableOp)' with input shapes: [?,1,1,16], [3,3,16,16].
Negative dimension size caused by subtracting 3 from 1 for '{{node conv2d_5/Conv2D}} = Conv2D[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true](dropout_4/cond/Identity, conv2d_5/Conv2D/ReadVariableOp)' with input shapes: [?,1,1,8], [3,3,8,8].
Traceback (most recent call last):
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 1838, in _create_c_op
    c_op = pywrap_tf_session.TF_FinishOperation(op_desc)
tensorflow.python.framework.errors_impl.InvalidArgumentError: Negative dimension size caused by subtracting 3 from 1 for '{{node conv2d_5/Conv2D}} = Conv2D[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true](dropout_4/cond/Identity, conv2d_5/Conv2D/ReadVariableOp)' with input shapes: [?,1,1,8], [3,3,8,8].

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 247, in build_and_compile
    classifier_.add(layers.Conv2D(units_layer_3,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 459, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py", line 221, in add
    output_tensor = layer(self.outputs[0])
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 926, in __call__
    return self._functional_construction_call(inputs, args, kwargs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 1118, in _functional_construction_call
    outputs = call_fn(cast_inputs, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\convolutional.py", line 251, in call
    outputs = self._convolution_op(inputs, self.kernel)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\dispatch.py", line 201, in wrapper
    return target(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 1014, in convolution_v2
    return convolution_internal(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 1144, in convolution_internal
    return op(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 2588, in _conv2d_expanded_batch
    return gen_nn_ops.conv2d(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_nn_ops.py", line 976, in conv2d
    _, _, _op, _outputs = _op_def_library._apply_op_helper(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py", line 742, in _apply_op_helper
    op = g._create_op_internal(op_type_name, inputs, dtypes=None,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 591, in _create_op_internal
    return super(FuncGraph, self)._create_op_internal(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 3509, in _create_op_internal
    ret = Operation(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 2000, in __init__
    self._c_op = _create_c_op(self._graph, node_def, inputs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 1841, in _create_c_op
    raise ValueError(str(e))
ValueError: Negative dimension size caused by subtracting 3 from 1 for '{{node conv2d_5/Conv2D}} = Conv2D[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true](dropout_4/cond/Identity, conv2d_5/Conv2D/ReadVariableOp)' with input shapes: [?,1,1,8], [3,3,8,8].
Negative dimension size caused by subtracting 3 from 1 for '{{node conv2d_5/Conv2D}} = Conv2D[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true](dropout_4/cond/Identity, conv2d_5/Conv2D/ReadVariableOp)' with input shapes: [?,1,1,8], [3,3,8,8].
Traceback (most recent call last):
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 1838, in _create_c_op
    c_op = pywrap_tf_session.TF_FinishOperation(op_desc)
tensorflow.python.framework.errors_impl.InvalidArgumentError: Negative dimension size caused by subtracting 3 from 1 for '{{node conv2d_5/Conv2D}} = Conv2D[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true](dropout_4/cond/Identity, conv2d_5/Conv2D/ReadVariableOp)' with input shapes: [?,1,1,8], [3,3,8,8].

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 247, in build_and_compile
    classifier_.add(layers.Conv2D(units_layer_3,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 459, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py", line 221, in add
    output_tensor = layer(self.outputs[0])
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 926, in __call__
    return self._functional_construction_call(inputs, args, kwargs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 1118, in _functional_construction_call
    outputs = call_fn(cast_inputs, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\convolutional.py", line 251, in call
    outputs = self._convolution_op(inputs, self.kernel)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\dispatch.py", line 201, in wrapper
    return target(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 1014, in convolution_v2
    return convolution_internal(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 1144, in convolution_internal
    return op(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 2588, in _conv2d_expanded_batch
    return gen_nn_ops.conv2d(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_nn_ops.py", line 976, in conv2d
    _, _, _op, _outputs = _op_def_library._apply_op_helper(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py", line 742, in _apply_op_helper
    op = g._create_op_internal(op_type_name, inputs, dtypes=None,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 591, in _create_op_internal
    return super(FuncGraph, self)._create_op_internal(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 3509, in _create_op_internal
    ret = Operation(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 2000, in __init__
    self._c_op = _create_c_op(self._graph, node_def, inputs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 1841, in _create_c_op
    raise ValueError(str(e))
ValueError: Negative dimension size caused by subtracting 3 from 1 for '{{node conv2d_5/Conv2D}} = Conv2D[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true](dropout_4/cond/Identity, conv2d_5/Conv2D/ReadVariableOp)' with input shapes: [?,1,1,8], [3,3,8,8].
Negative dimension size caused by subtracting 4 from 1 for '{{node conv2d_3/Conv2D}} = Conv2D[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true](dropout_2/cond/Identity, conv2d_3/Conv2D/ReadVariableOp)' with input shapes: [?,1,1,8], [4,4,8,8].
Traceback (most recent call last):
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 1838, in _create_c_op
    c_op = pywrap_tf_session.TF_FinishOperation(op_desc)
tensorflow.python.framework.errors_impl.InvalidArgumentError: Negative dimension size caused by subtracting 4 from 1 for '{{node conv2d_3/Conv2D}} = Conv2D[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true](dropout_2/cond/Identity, conv2d_3/Conv2D/ReadVariableOp)' with input shapes: [?,1,1,8], [4,4,8,8].

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 226, in build_and_compile
    classifier_.add(layers.Conv2D(units_layer_2, kernel_size=(kernel_size_y_2, kernel_size_x_2),
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 459, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py", line 221, in add
    output_tensor = layer(self.outputs[0])
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 926, in __call__
    return self._functional_construction_call(inputs, args, kwargs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 1118, in _functional_construction_call
    outputs = call_fn(cast_inputs, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\convolutional.py", line 251, in call
    outputs = self._convolution_op(inputs, self.kernel)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\dispatch.py", line 201, in wrapper
    return target(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 1014, in convolution_v2
    return convolution_internal(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 1144, in convolution_internal
    return op(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 2588, in _conv2d_expanded_batch
    return gen_nn_ops.conv2d(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_nn_ops.py", line 976, in conv2d
    _, _, _op, _outputs = _op_def_library._apply_op_helper(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py", line 742, in _apply_op_helper
    op = g._create_op_internal(op_type_name, inputs, dtypes=None,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 591, in _create_op_internal
    return super(FuncGraph, self)._create_op_internal(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 3509, in _create_op_internal
    ret = Operation(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 2000, in __init__
    self._c_op = _create_c_op(self._graph, node_def, inputs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 1841, in _create_c_op
    raise ValueError(str(e))
ValueError: Negative dimension size caused by subtracting 4 from 1 for '{{node conv2d_3/Conv2D}} = Conv2D[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true](dropout_2/cond/Identity, conv2d_3/Conv2D/ReadVariableOp)' with input shapes: [?,1,1,8], [4,4,8,8].
Negative dimension size caused by subtracting 3 from 1 for '{{node conv2d_5/Conv2D}} = Conv2D[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true](dropout_4/cond/Identity, conv2d_5/Conv2D/ReadVariableOp)' with input shapes: [?,1,1,8], [3,3,8,8].
Traceback (most recent call last):
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 1838, in _create_c_op
    c_op = pywrap_tf_session.TF_FinishOperation(op_desc)
tensorflow.python.framework.errors_impl.InvalidArgumentError: Negative dimension size caused by subtracting 3 from 1 for '{{node conv2d_5/Conv2D}} = Conv2D[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true](dropout_4/cond/Identity, conv2d_5/Conv2D/ReadVariableOp)' with input shapes: [?,1,1,8], [3,3,8,8].

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 247, in build_and_compile
    classifier_.add(layers.Conv2D(units_layer_3,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 459, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py", line 221, in add
    output_tensor = layer(self.outputs[0])
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 926, in __call__
    return self._functional_construction_call(inputs, args, kwargs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 1118, in _functional_construction_call
    outputs = call_fn(cast_inputs, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\convolutional.py", line 251, in call
    outputs = self._convolution_op(inputs, self.kernel)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\dispatch.py", line 201, in wrapper
    return target(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 1014, in convolution_v2
    return convolution_internal(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 1144, in convolution_internal
    return op(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 2588, in _conv2d_expanded_batch
    return gen_nn_ops.conv2d(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_nn_ops.py", line 976, in conv2d
    _, _, _op, _outputs = _op_def_library._apply_op_helper(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py", line 742, in _apply_op_helper
    op = g._create_op_internal(op_type_name, inputs, dtypes=None,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 591, in _create_op_internal
    return super(FuncGraph, self)._create_op_internal(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 3509, in _create_op_internal
    ret = Operation(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 2000, in __init__
    self._c_op = _create_c_op(self._graph, node_def, inputs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 1841, in _create_c_op
    raise ValueError(str(e))
ValueError: Negative dimension size caused by subtracting 3 from 1 for '{{node conv2d_5/Conv2D}} = Conv2D[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true](dropout_4/cond/Identity, conv2d_5/Conv2D/ReadVariableOp)' with input shapes: [?,1,1,8], [3,3,8,8].
Negative dimension size caused by subtracting 8 from 7 for '{{node conv2d_2/Conv2D}} = Conv2D[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true](dropout_1/cond/Identity, conv2d_2/Conv2D/ReadVariableOp)' with input shapes: [?,7,7,16], [8,8,16,8].
Traceback (most recent call last):
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 1838, in _create_c_op
    c_op = pywrap_tf_session.TF_FinishOperation(op_desc)
tensorflow.python.framework.errors_impl.InvalidArgumentError: Negative dimension size caused by subtracting 8 from 7 for '{{node conv2d_2/Conv2D}} = Conv2D[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true](dropout_1/cond/Identity, conv2d_2/Conv2D/ReadVariableOp)' with input shapes: [?,7,7,16], [8,8,16,8].

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 216, in build_and_compile
    classifier_.add(layers.Conv2D(units_layer_2, kernel_size=(kernel_size_y_2, kernel_size_x_2),
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 459, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py", line 221, in add
    output_tensor = layer(self.outputs[0])
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 926, in __call__
    return self._functional_construction_call(inputs, args, kwargs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 1118, in _functional_construction_call
    outputs = call_fn(cast_inputs, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\convolutional.py", line 251, in call
    outputs = self._convolution_op(inputs, self.kernel)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\dispatch.py", line 201, in wrapper
    return target(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 1014, in convolution_v2
    return convolution_internal(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 1144, in convolution_internal
    return op(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 2588, in _conv2d_expanded_batch
    return gen_nn_ops.conv2d(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_nn_ops.py", line 976, in conv2d
    _, _, _op, _outputs = _op_def_library._apply_op_helper(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py", line 742, in _apply_op_helper
    op = g._create_op_internal(op_type_name, inputs, dtypes=None,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 591, in _create_op_internal
    return super(FuncGraph, self)._create_op_internal(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 3509, in _create_op_internal
    ret = Operation(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 2000, in __init__
    self._c_op = _create_c_op(self._graph, node_def, inputs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 1841, in _create_c_op
    raise ValueError(str(e))
ValueError: Negative dimension size caused by subtracting 8 from 7 for '{{node conv2d_2/Conv2D}} = Conv2D[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true](dropout_1/cond/Identity, conv2d_2/Conv2D/ReadVariableOp)' with input shapes: [?,7,7,16], [8,8,16,8].
name 'customized_loss' is not defined
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 142, in build_and_compile
    losses_list.append(customized_loss())
NameError: name 'customized_loss' is not defined
OOM when allocating tensor with shape[537832008,512] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc [Op:RandomUniform]
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 272, in build_and_compile
    classifier_.add(layers.Dense(units_dense_layer_4, activation=activation_dense_layer_4,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 459, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py", line 221, in add
    output_tensor = layer(self.outputs[0])
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 926, in __call__
    return self._functional_construction_call(inputs, args, kwargs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 1099, in _functional_construction_call
    self._maybe_build(inputs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 2648, in _maybe_build
    self.build(input_shapes)  # pylint:disable=not-callable
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\core.py", line 1171, in build
    self.kernel = self.add_weight(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 597, in add_weight
    variable = self._add_variable_with_custom_getter(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 747, in _add_variable_with_custom_getter
    new_variable = getter(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer_utils.py", line 133, in make_variable
    return tf_variables.VariableV1(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\variables.py", line 260, in __call__
    return cls._variable_v1_call(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\variables.py", line 206, in _variable_v1_call
    return previous_getter(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\variables.py", line 199, in <lambda>
    previous_getter = lambda **kwargs: default_variable_creator(None, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\variable_scope.py", line 2587, in default_variable_creator
    return resource_variable_ops.ResourceVariable(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\variables.py", line 264, in __call__
    return super(VariableMetaclass, cls).__call__(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\resource_variable_ops.py", line 1509, in __init__
    self._init_from_args(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\resource_variable_ops.py", line 1653, in _init_from_args
    initial_value() if init_from_fn else initial_value,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\initializers\initializers_v2.py", line 397, in __call__
    return super(VarianceScaling, self).__call__(shape, dtype=_get_dtype(dtype))
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\init_ops_v2.py", line 561, in __call__
    return self._random_generator.random_uniform(shape, -limit, limit, dtype)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\init_ops_v2.py", line 1043, in random_uniform
    return op(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\dispatch.py", line 201, in wrapper
    return target(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\random_ops.py", line 301, in random_uniform
    result = gen_random_ops.random_uniform(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_random_ops.py", line 727, in random_uniform
    _ops.raise_from_not_ok_status(e, name)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 6879, in raise_from_not_ok_status
    six.raise_from(core._status_to_exception(e.code, message), None)
  File "<string>", line 3, in raise_from
tensorflow.python.framework.errors_impl.ResourceExhaustedError: OOM when allocating tensor with shape[537832008,512] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc [Op:RandomUniform]
OOM when allocating tensor with shape[537832008,512] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc [Op:RandomUniform]
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 272, in build_and_compile
    classifier_.add(layers.Dense(units_dense_layer_4, activation=activation_dense_layer_4,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 459, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py", line 221, in add
    output_tensor = layer(self.outputs[0])
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 926, in __call__
    return self._functional_construction_call(inputs, args, kwargs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 1099, in _functional_construction_call
    self._maybe_build(inputs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 2648, in _maybe_build
    self.build(input_shapes)  # pylint:disable=not-callable
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\core.py", line 1171, in build
    self.kernel = self.add_weight(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 597, in add_weight
    variable = self._add_variable_with_custom_getter(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 747, in _add_variable_with_custom_getter
    new_variable = getter(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer_utils.py", line 133, in make_variable
    return tf_variables.VariableV1(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\variables.py", line 260, in __call__
    return cls._variable_v1_call(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\variables.py", line 206, in _variable_v1_call
    return previous_getter(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\variables.py", line 199, in <lambda>
    previous_getter = lambda **kwargs: default_variable_creator(None, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\variable_scope.py", line 2587, in default_variable_creator
    return resource_variable_ops.ResourceVariable(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\variables.py", line 264, in __call__
    return super(VariableMetaclass, cls).__call__(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\resource_variable_ops.py", line 1509, in __init__
    self._init_from_args(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\resource_variable_ops.py", line 1653, in _init_from_args
    initial_value() if init_from_fn else initial_value,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\initializers\initializers_v2.py", line 397, in __call__
    return super(VarianceScaling, self).__call__(shape, dtype=_get_dtype(dtype))
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\init_ops_v2.py", line 561, in __call__
    return self._random_generator.random_uniform(shape, -limit, limit, dtype)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\init_ops_v2.py", line 1043, in random_uniform
    return op(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\dispatch.py", line 201, in wrapper
    return target(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\random_ops.py", line 301, in random_uniform
    result = gen_random_ops.random_uniform(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_random_ops.py", line 727, in random_uniform
    _ops.raise_from_not_ok_status(e, name)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 6879, in raise_from_not_ok_status
    six.raise_from(core._status_to_exception(e.code, message), None)
  File "<string>", line 3, in raise_from
tensorflow.python.framework.errors_impl.ResourceExhaustedError: OOM when allocating tensor with shape[537832008,512] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc [Op:RandomUniform]
OOM when allocating tensor with shape[537832008,512] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc [Op:RandomUniform]
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 272, in build_and_compile
    classifier_.add(layers.Dense(units_dense_layer_4, activation=activation_dense_layer_4,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 459, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py", line 221, in add
    output_tensor = layer(self.outputs[0])
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 926, in __call__
    return self._functional_construction_call(inputs, args, kwargs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 1099, in _functional_construction_call
    self._maybe_build(inputs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 2648, in _maybe_build
    self.build(input_shapes)  # pylint:disable=not-callable
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\core.py", line 1171, in build
    self.kernel = self.add_weight(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 597, in add_weight
    variable = self._add_variable_with_custom_getter(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 747, in _add_variable_with_custom_getter
    new_variable = getter(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer_utils.py", line 133, in make_variable
    return tf_variables.VariableV1(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\variables.py", line 260, in __call__
    return cls._variable_v1_call(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\variables.py", line 206, in _variable_v1_call
    return previous_getter(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\variables.py", line 199, in <lambda>
    previous_getter = lambda **kwargs: default_variable_creator(None, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\variable_scope.py", line 2587, in default_variable_creator
    return resource_variable_ops.ResourceVariable(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\variables.py", line 264, in __call__
    return super(VariableMetaclass, cls).__call__(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\resource_variable_ops.py", line 1509, in __init__
    self._init_from_args(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\resource_variable_ops.py", line 1653, in _init_from_args
    initial_value() if init_from_fn else initial_value,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\initializers\initializers_v2.py", line 397, in __call__
    return super(VarianceScaling, self).__call__(shape, dtype=_get_dtype(dtype))
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\init_ops_v2.py", line 561, in __call__
    return self._random_generator.random_uniform(shape, -limit, limit, dtype)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\init_ops_v2.py", line 1043, in random_uniform
    return op(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\dispatch.py", line 201, in wrapper
    return target(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\random_ops.py", line 301, in random_uniform
    result = gen_random_ops.random_uniform(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_random_ops.py", line 727, in random_uniform
    _ops.raise_from_not_ok_status(e, name)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 6879, in raise_from_not_ok_status
    six.raise_from(core._status_to_exception(e.code, message), None)
  File "<string>", line 3, in raise_from
tensorflow.python.framework.errors_impl.ResourceExhaustedError: OOM when allocating tensor with shape[537832008,512] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc [Op:RandomUniform]
('Keyword argument not understood:', 'pading')
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 207, in build_and_compile
    classifier_.add(layers.Conv2D(units_layer_1, kernel_size=(kernel_size_y_1, kernel_size_x_1),
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\convolutional.py", line 656, in __init__
    super(Conv2D, self).__init__(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\convolutional.py", line 137, in __init__
    super(Conv, self).__init__(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 459, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 318, in __init__
    generic_utils.validate_kwargs(kwargs, allowed_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py", line 778, in validate_kwargs
    raise TypeError(error_message, kwarg)
TypeError: ('Keyword argument not understood:', 'pading')
'Functional' object has no attribute 'add'
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 311, in build_and_compile
    classifier_.add(layers.GlobalMaxPooling2D())
AttributeError: 'Functional' object has no attribute 'add'
Attempt to convert a value (<tensorflow.python.keras.layers.pooling.GlobalMaxPooling2D object at 0x000001FEE53622E0>) with an unsupported type (<class 'tensorflow.python.keras.layers.pooling.GlobalMaxPooling2D'>) to a Tensor.
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 311, in build_and_compile
    classifier_(layers.GlobalMaxPooling2D())
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 986, in __call__
    outputs = call_fn(inputs, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\functional.py", line 385, in call
    return self._run_internal_graph(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\functional.py", line 508, in _run_internal_graph
    outputs = node.layer(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 986, in __call__
    outputs = call_fn(inputs, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\preprocessing\image_preprocessing.py", line 329, in call
    return math_ops.cast(inputs, dtype) * scale + offset
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\dispatch.py", line 201, in wrapper
    return target(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\math_ops.py", line 923, in cast
    x = ops.convert_to_tensor(x, name="x")
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 1525, in convert_to_tensor
    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\constant_op.py", line 339, in _constant_tensor_conversion_function
    return constant(v, dtype=dtype, name=name)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\constant_op.py", line 264, in constant
    return _constant_impl(value, dtype, shape, name, verify_shape=False,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\constant_op.py", line 276, in _constant_impl
    return _constant_eager_impl(ctx, value, dtype, shape, verify_shape)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\constant_op.py", line 301, in _constant_eager_impl
    t = convert_to_eager_tensor(value, ctx, dtype)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\constant_op.py", line 98, in convert_to_eager_tensor
    return ops.EagerTensor(value, ctx.device_name, dtype)
ValueError: Attempt to convert a value (<tensorflow.python.keras.layers.pooling.GlobalMaxPooling2D object at 0x000001FEE53622E0>) with an unsupported type (<class 'tensorflow.python.keras.layers.pooling.GlobalMaxPooling2D'>) to a Tensor.
'Functional' object has no attribute 'build_model'
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 311, in build_and_compile
    classifier_.build_model()(layers.GlobalMaxPooling2D())
AttributeError: 'Functional' object has no attribute 'build_model'
build() missing 1 required positional argument: 'input_shape'
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 311, in build_and_compile
    classifier_.build()(layers.GlobalMaxPooling2D())
TypeError: build() missing 1 required positional argument: 'input_shape'
'NoneType' object is not callable
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 311, in build_and_compile
    classifier_.build(input_shape=(input_shape_y, input_shape_x, nof_channels))(layers.GlobalMaxPooling2D())
TypeError: 'NoneType' object is not callable
'Functional' object has no attribute 'add'
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 312, in build_and_compile
    classifier_.add(layers.GlobalMaxPooling2D())
AttributeError: 'Functional' object has no attribute 'add'
Attempt to convert a value (<tensorflow.python.keras.layers.pooling.GlobalMaxPooling2D object at 0x000002DF066F3340>) with an unsupported type (<class 'tensorflow.python.keras.layers.pooling.GlobalMaxPooling2D'>) to a Tensor.
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 312, in build_and_compile
    classifier_(layers.GlobalMaxPooling2D())
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 986, in __call__
    outputs = call_fn(inputs, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\functional.py", line 385, in call
    return self._run_internal_graph(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\functional.py", line 508, in _run_internal_graph
    outputs = node.layer(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 986, in __call__
    outputs = call_fn(inputs, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\preprocessing\image_preprocessing.py", line 329, in call
    return math_ops.cast(inputs, dtype) * scale + offset
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\dispatch.py", line 201, in wrapper
    return target(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\math_ops.py", line 923, in cast
    x = ops.convert_to_tensor(x, name="x")
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 1525, in convert_to_tensor
    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\constant_op.py", line 339, in _constant_tensor_conversion_function
    return constant(v, dtype=dtype, name=name)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\constant_op.py", line 264, in constant
    return _constant_impl(value, dtype, shape, name, verify_shape=False,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\constant_op.py", line 276, in _constant_impl
    return _constant_eager_impl(ctx, value, dtype, shape, verify_shape)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\constant_op.py", line 301, in _constant_eager_impl
    t = convert_to_eager_tensor(value, ctx, dtype)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\constant_op.py", line 98, in convert_to_eager_tensor
    return ops.EagerTensor(value, ctx.device_name, dtype)
ValueError: Attempt to convert a value (<tensorflow.python.keras.layers.pooling.GlobalMaxPooling2D object at 0x000002DF066F3340>) with an unsupported type (<class 'tensorflow.python.keras.layers.pooling.GlobalMaxPooling2D'>) to a Tensor.
add() got an unexpected keyword argument 'kernel_initializer'
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 314, in build_and_compile
    effnb2_model.add(layers.Dense(units_final_layer, activation=activation_final_layer),
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 459, in _method_wrapper
    result = method(self, *args, **kwargs)
TypeError: add() got an unexpected keyword argument 'kernel_initializer'
The last dimension of the inputs to `Dense` should be defined. Found `None`.
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 313, in build_and_compile
    effnb2_model.add(layers.Dense(units_final_layer, activation=activation_final_layer,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 459, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py", line 221, in add
    output_tensor = layer(self.outputs[0])
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 926, in __call__
    return self._functional_construction_call(inputs, args, kwargs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 1099, in _functional_construction_call
    self._maybe_build(inputs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 2648, in _maybe_build
    self.build(input_shapes)  # pylint:disable=not-callable
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\core.py", line 1168, in build
    raise ValueError('The last dimension of the inputs to `Dense` '
ValueError: The last dimension of the inputs to `Dense` should be defined. Found `None`.
The last dimension of the inputs to `Dense` should be defined. Found `None`.
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 314, in build_and_compile
    effnb2_model.add(layers.Dense(units_final_layer, activation=activation_final_layer,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 459, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py", line 221, in add
    output_tensor = layer(self.outputs[0])
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 926, in __call__
    return self._functional_construction_call(inputs, args, kwargs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 1099, in _functional_construction_call
    self._maybe_build(inputs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 2648, in _maybe_build
    self.build(input_shapes)  # pylint:disable=not-callable
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\core.py", line 1168, in build
    raise ValueError('The last dimension of the inputs to `Dense` '
ValueError: The last dimension of the inputs to `Dense` should be defined. Found `None`.
The last dimension of the inputs to `Dense` should be defined. Found `None`.
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 313, in build_and_compile
    effnb2_model.add(layers.Dense(units_dense_layer_4, activation=activation_dense_layer_4))
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 459, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py", line 221, in add
    output_tensor = layer(self.outputs[0])
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 926, in __call__
    return self._functional_construction_call(inputs, args, kwargs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 1099, in _functional_construction_call
    self._maybe_build(inputs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 2648, in _maybe_build
    self.build(input_shapes)  # pylint:disable=not-callable
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\core.py", line 1168, in build
    raise ValueError('The last dimension of the inputs to `Dense` '
ValueError: The last dimension of the inputs to `Dense` should be defined. Found `None`.
The last dimension of the inputs to `Dense` should be defined. Found `None`.
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 312, in build_and_compile
    effnb2_model.add(layers.Dense(units_dense_layer_4, activation=activation_dense_layer_4))
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 459, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py", line 221, in add
    output_tensor = layer(self.outputs[0])
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 926, in __call__
    return self._functional_construction_call(inputs, args, kwargs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 1099, in _functional_construction_call
    self._maybe_build(inputs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 2648, in _maybe_build
    self.build(input_shapes)  # pylint:disable=not-callable
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\core.py", line 1168, in build
    raise ValueError('The last dimension of the inputs to `Dense` '
ValueError: The last dimension of the inputs to `Dense` should be defined. Found `None`.
The last dimension of the inputs to `Dense` should be defined. Found `None`.
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 312, in build_and_compile
    effnb2_model.add(layers.Dense(units_dense_layer_4, activation=activation_dense_layer_4,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 459, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py", line 221, in add
    output_tensor = layer(self.outputs[0])
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 926, in __call__
    return self._functional_construction_call(inputs, args, kwargs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 1099, in _functional_construction_call
    self._maybe_build(inputs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 2648, in _maybe_build
    self.build(input_shapes)  # pylint:disable=not-callable
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\core.py", line 1168, in build
    raise ValueError('The last dimension of the inputs to `Dense` '
ValueError: The last dimension of the inputs to `Dense` should be defined. Found `None`.
The last dimension of the inputs to `Dense` should be defined. Found `None`.
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 312, in build_and_compile
    effnb2_model.add(layers.Dense(units_final_layer, activation=activation_final_layer,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 459, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py", line 221, in add
    output_tensor = layer(self.outputs[0])
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 926, in __call__
    return self._functional_construction_call(inputs, args, kwargs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 1099, in _functional_construction_call
    self._maybe_build(inputs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 2648, in _maybe_build
    self.build(input_shapes)  # pylint:disable=not-callable
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\core.py", line 1168, in build
    raise ValueError('The last dimension of the inputs to `Dense` '
ValueError: The last dimension of the inputs to `Dense` should be defined. Found `None`.
'Functional' object has no attribute 'add'
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 312, in build_and_compile
    classifier_.add(layers.Dense(units=units_final_layer,
AttributeError: 'Functional' object has no attribute 'add'
The last dimension of the inputs to `Dense` should be defined. Found `None`.
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 312, in build_and_compile
    effnb2_model.add(layers.Dense(units=units_final_layer,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 459, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py", line 221, in add
    output_tensor = layer(self.outputs[0])
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 926, in __call__
    return self._functional_construction_call(inputs, args, kwargs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 1099, in _functional_construction_call
    self._maybe_build(inputs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 2648, in _maybe_build
    self.build(input_shapes)  # pylint:disable=not-callable
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\core.py", line 1168, in build
    raise ValueError('The last dimension of the inputs to `Dense` '
ValueError: The last dimension of the inputs to `Dense` should be defined. Found `None`.
The last dimension of the inputs to `Dense` should be defined. Found `None`.
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 313, in build_and_compile
    effnb2_model.add(layers.Dense(units=units_final_layer, activation=activation_final_layer))
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 459, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py", line 221, in add
    output_tensor = layer(self.outputs[0])
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 926, in __call__
    return self._functional_construction_call(inputs, args, kwargs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 1099, in _functional_construction_call
    self._maybe_build(inputs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 2648, in _maybe_build
    self.build(input_shapes)  # pylint:disable=not-callable
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\core.py", line 1168, in build
    raise ValueError('The last dimension of the inputs to `Dense` '
ValueError: The last dimension of the inputs to `Dense` should be defined. Found `None`.
Input 0 of layer global_max_pooling1d is incompatible with the layer: expected ndim=3, found ndim=4. Full shape received: [None, None, None, 1408]
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 311, in build_and_compile
    effnb2_model.add(layers.GlobalMaxPool1D())
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 459, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py", line 221, in add
    output_tensor = layer(self.outputs[0])
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 926, in __call__
    return self._functional_construction_call(inputs, args, kwargs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 1093, in _functional_construction_call
    input_spec.assert_input_compatibility(self.input_spec, inputs, self.name)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py", line 183, in assert_input_compatibility
    raise ValueError('Input ' + str(input_index) + ' of layer ' +
ValueError: Input 0 of layer global_max_pooling1d is incompatible with the layer: expected ndim=3, found ndim=4. Full shape received: [None, None, None, 1408]
The last dimension of the inputs to `Dense` should be defined. Found `None`.
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 312, in build_and_compile
    effnb2_model.add(layers.Dense(units=1408, activation=activation_final_layer))
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 459, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py", line 221, in add
    output_tensor = layer(self.outputs[0])
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 926, in __call__
    return self._functional_construction_call(inputs, args, kwargs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 1099, in _functional_construction_call
    self._maybe_build(inputs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 2648, in _maybe_build
    self.build(input_shapes)  # pylint:disable=not-callable
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\core.py", line 1168, in build
    raise ValueError('The last dimension of the inputs to `Dense` '
ValueError: The last dimension of the inputs to `Dense` should be defined. Found `None`.
Input 0 of layer global_max_pooling1d is incompatible with the layer: expected ndim=3, found ndim=4. Full shape received: [None, None, None, 1408]
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 311, in build_and_compile
    effnb2_model.add(layers.GlobalMaxPool1D())
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 459, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py", line 221, in add
    output_tensor = layer(self.outputs[0])
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 926, in __call__
    return self._functional_construction_call(inputs, args, kwargs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 1093, in _functional_construction_call
    input_spec.assert_input_compatibility(self.input_spec, inputs, self.name)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py", line 183, in assert_input_compatibility
    raise ValueError('Input ' + str(input_index) + ' of layer ' +
ValueError: Input 0 of layer global_max_pooling1d is incompatible with the layer: expected ndim=3, found ndim=4. Full shape received: [None, None, None, 1408]
You are trying to load a weight file containing 2 layers into a model with 185 layers.
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 297, in build_and_compile
    classifier_ = tf.keras.applications.EfficientNetB2(include_top=False, weights=pretrained_weights,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\applications\efficientnet.py", line 579, in EfficientNetB2
    return EfficientNet(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\applications\efficientnet.py", line 409, in EfficientNet
    model.load_weights(weights)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 2218, in load_weights
    hdf5_format.load_weights_from_hdf5_group(f, self.layers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\saving\hdf5_format.py", line 684, in load_weights_from_hdf5_group
    raise ValueError('You are trying to load a weight file '
ValueError: You are trying to load a weight file containing 2 layers into a model with 185 layers.
'Functional' object has no attribute 'add'
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 302, in build_and_compile
    classifier_.add(layers.Conv2D(units_layer_2, kernel_size=(kernel_size_y_2, kernel_size_x_2),
AttributeError: 'Functional' object has no attribute 'add'
Shapes (3,) and (3, 3, 3, 32) are incompatible
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 313, in build_and_compile
    classifier_.load_weights(pretrained_weights)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 2218, in load_weights
    hdf5_format.load_weights_from_hdf5_group(f, self.layers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\saving\hdf5_format.py", line 709, in load_weights_from_hdf5_group
    K.batch_set_value(weight_value_tuples)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\dispatch.py", line 201, in wrapper
    return target(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\backend.py", line 3580, in batch_set_value
    x.assign(np.asarray(value, dtype=dtype(x)))
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\resource_variable_ops.py", line 860, in assign
    self._shape.assert_is_compatible_with(value_tensor.shape)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\tensor_shape.py", line 1134, in assert_is_compatible_with
    raise ValueError("Shapes %s and %s are incompatible" % (self, other))
ValueError: Shapes (3,) and (3, 3, 3, 32) are incompatible
You are trying to load a weight file containing 2 layers into a model with 185 layers.
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 296, in build_and_compile
    classifier_.load_weights(pretrained_weights)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 2218, in load_weights
    hdf5_format.load_weights_from_hdf5_group(f, self.layers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\saving\hdf5_format.py", line 684, in load_weights_from_hdf5_group
    raise ValueError('You are trying to load a weight file '
ValueError: You are trying to load a weight file containing 2 layers into a model with 185 layers.
Shapes (1, 1, 2112, 352) and (3, 3, 3, 32) are incompatible
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 315, in build_and_compile
    classifier_.load_weights(pretrained_weights)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 2218, in load_weights
    hdf5_format.load_weights_from_hdf5_group(f, self.layers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\saving\hdf5_format.py", line 709, in load_weights_from_hdf5_group
    K.batch_set_value(weight_value_tuples)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\dispatch.py", line 201, in wrapper
    return target(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\backend.py", line 3580, in batch_set_value
    x.assign(np.asarray(value, dtype=dtype(x)))
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\resource_variable_ops.py", line 860, in assign
    self._shape.assert_is_compatible_with(value_tensor.shape)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\tensor_shape.py", line 1134, in assert_is_compatible_with
    raise ValueError("Shapes %s and %s are incompatible" % (self, other))
ValueError: Shapes (1, 1, 2112, 352) and (3, 3, 3, 32) are incompatible
Could not interpret initializer identifier: -0.477121254719
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 313, in build_and_compile
    effnb2_model.add(layers.Dense(units_final_layer, activation=activation_final_layer,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\core.py", line 1150, in __init__
    self.bias_initializer = initializers.get(bias_initializer)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\initializers\__init__.py", line 161, in get
    raise ValueError('Could not interpret initializer identifier: ' +
ValueError: Could not interpret initializer identifier: -0.477121254719
Can't instantiate abstract class customized_metrics_bacc with abstract methods result, update_state
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 165, in build_and_compile
    metrics_list.append(customized_metrics_bacc())
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py", line 163, in __new__
    obj = super(Metric, cls).__new__(cls)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\version_utils.py", line 66, in __new__
    return super(LayerVersionSelector, cls).__new__(cls)
TypeError: Can't instantiate abstract class customized_metrics_bacc with abstract methods result, update_state
'property' object is not iterable
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 322, in build_and_compile
    effnb2_model.compile(optimizer=optimizer_function, loss=losses_list, metrics=metrics_list)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 538, in compile
    self._validate_compile(optimizer, metrics, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 2525, in _validate_compile
    for v in getattr(metric, 'variables', []):
TypeError: 'property' object is not iterable
Can't instantiate abstract class customized_metrics_bacc with abstract methods result, update_state
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 172, in build_and_compile
    metrics_list.append(customized_metrics_bacc())
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py", line 163, in __new__
    obj = super(Metric, cls).__new__(cls)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\version_utils.py", line 66, in __new__
    return super(LayerVersionSelector, cls).__new__(cls)
TypeError: Can't instantiate abstract class customized_metrics_bacc with abstract methods result, update_state
Can't instantiate abstract class customized_metrics_bacc with abstract methods result, update_state
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 172, in build_and_compile
    metrics_list.append([customized_metrics_bacc()])
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py", line 163, in __new__
    obj = super(Metric, cls).__new__(cls)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\version_utils.py", line 66, in __new__
    return super(LayerVersionSelector, cls).__new__(cls)
TypeError: Can't instantiate abstract class customized_metrics_bacc with abstract methods result, update_state
LossScaleOptimizer does not support wrapping optimizers with a clipnorm. Optimizer <tensorflow.python.keras.optimizer_v2.adam.Adam object at 0x000002B0CEE815E0> has clipnorm 1.0
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 137, in build_and_compile
    optimizer_function = tf.train.experimental.enable_mixed_precision_graph_rewrite(optimizer_function)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\experimental\mixed_precision.py", line 205, in enable_mixed_precision_graph_rewrite
    return _enable_mixed_precision_graph_rewrite_base(opt, loss_scale,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\experimental\mixed_precision.py", line 345, in _enable_mixed_precision_graph_rewrite_base
    opt = _wrap_optimizer(opt, loss_scale, use_v1_behavior=use_v1_behavior)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\experimental\mixed_precision.py", line 54, in _wrap_optimizer
    return wrapper_cls(opt, loss_scale)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\mixed_precision\experimental\loss_scale_optimizer.py", line 252, in __init__
    raise ValueError('LossScaleOptimizer does not support wrapping '
ValueError: LossScaleOptimizer does not support wrapping optimizers with a clipnorm. Optimizer <tensorflow.python.keras.optimizer_v2.adam.Adam object at 0x000002B0CEE815E0> has clipnorm 1.0
LossScaleOptimizer does not support wrapping optimizers with a clipvalue. Optimizer <tensorflow.python.keras.optimizer_v2.adam.Adam object at 0x000001DA40F105E0> has clipvalue 5.0
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 137, in build_and_compile
    optimizer_function = tf.train.experimental.enable_mixed_precision_graph_rewrite(optimizer_function)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\experimental\mixed_precision.py", line 205, in enable_mixed_precision_graph_rewrite
    return _enable_mixed_precision_graph_rewrite_base(opt, loss_scale,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\experimental\mixed_precision.py", line 345, in _enable_mixed_precision_graph_rewrite_base
    opt = _wrap_optimizer(opt, loss_scale, use_v1_behavior=use_v1_behavior)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\experimental\mixed_precision.py", line 54, in _wrap_optimizer
    return wrapper_cls(opt, loss_scale)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\mixed_precision\experimental\loss_scale_optimizer.py", line 257, in __init__
    raise ValueError('LossScaleOptimizer does not support wrapping '
ValueError: LossScaleOptimizer does not support wrapping optimizers with a clipvalue. Optimizer <tensorflow.python.keras.optimizer_v2.adam.Adam object at 0x000001DA40F105E0> has clipvalue 5.0
Can't instantiate abstract class OptimizerV2 with abstract methods get_config
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 144, in build_and_compile
    optimizer_function = customized_optimizer(optimizer_function, clipnorm)
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 49, in customized_optimizer
    return optimizers.Optimizer(opt_func, clipnorm=clip_norm)
TypeError: Can't instantiate abstract class OptimizerV2 with abstract methods get_config
LossScaleOptimizer does not support wrapping optimizers with a clipnorm. Optimizer <tensorflow.python.keras.optimizer_v2.adam.Adam object at 0x0000012E7BBF05E0> has clipnorm 1.0
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 140, in build_and_compile
    optimizer_function = tf.train.experimental.enable_mixed_precision_graph_rewrite(optimizer_function)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\experimental\mixed_precision.py", line 205, in enable_mixed_precision_graph_rewrite
    return _enable_mixed_precision_graph_rewrite_base(opt, loss_scale,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\experimental\mixed_precision.py", line 345, in _enable_mixed_precision_graph_rewrite_base
    opt = _wrap_optimizer(opt, loss_scale, use_v1_behavior=use_v1_behavior)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\experimental\mixed_precision.py", line 54, in _wrap_optimizer
    return wrapper_cls(opt, loss_scale)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\mixed_precision\experimental\loss_scale_optimizer.py", line 252, in __init__
    raise ValueError('LossScaleOptimizer does not support wrapping '
ValueError: LossScaleOptimizer does not support wrapping optimizers with a clipnorm. Optimizer <tensorflow.python.keras.optimizer_v2.adam.Adam object at 0x0000012E7BBF05E0> has clipnorm 1.0
