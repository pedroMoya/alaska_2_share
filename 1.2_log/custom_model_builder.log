auc_roc() missing 3 required positional arguments: 'self', 'y_true_local', and 'y_pred_local'
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 114, in build_and_compile
    metrics_list.append(customized_metrics.auc_roc())
TypeError: auc_roc() missing 3 required positional arguments: 'self', 'y_true_local', and 'y_pred_local'
Can't instantiate abstract class customized_metrics_auc_roc with abstract methods result, update_state
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 114, in build_and_compile
    metrics_list.append(customized_metrics_auc_roc())
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py", line 154, in __new__
    obj = super(Metric, cls).__new__(cls)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\version_utils.py", line 58, in __new__
    return super(LayerVersionSelector, cls).__new__(cls)
TypeError: Can't instantiate abstract class customized_metrics_auc_roc with abstract methods result, update_state
('Keyword argument not understood:', 'stride')
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 151, in build_and_compile
    classifier_.add(layers.Conv2D(units_layer_1, kernel_size=(kernel_size_y_1, kernel_size_x_1),
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\convolutional.py", line 582, in __init__
    super(Conv2D, self).__init__(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\convolutional.py", line 121, in __init__
    super(Conv, self).__init__(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 294, in __init__
    generic_utils.validate_kwargs(kwargs, allowed_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py", line 792, in validate_kwargs
    raise TypeError(error_message, kwarg)
TypeError: ('Keyword argument not understood:', 'stride')
('Keyword argument not understood:', 'stride')
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 153, in build_and_compile
    classifier_.add(layers.Conv2D(units_layer_1, kernel_size=(kernel_size_y_1, kernel_size_x_1),
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\convolutional.py", line 582, in __init__
    super(Conv2D, self).__init__(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\convolutional.py", line 121, in __init__
    super(Conv, self).__init__(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 294, in __init__
    generic_utils.validate_kwargs(kwargs, allowed_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py", line 792, in validate_kwargs
    raise TypeError(error_message, kwarg)
TypeError: ('Keyword argument not understood:', 'stride')
add() got an unexpected keyword argument 'activity_regularizer_dense_layer_4'
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 184, in build_and_compile
    classifier_.add(layers.Dense(units_dense_layer_4, activation=activation_dense_layer_4),
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
TypeError: add() got an unexpected keyword argument 'activity_regularizer_dense_layer_4'
add() got an unexpected keyword argument 'activity_regularizer'
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 184, in build_and_compile
    classifier_.add(layers.Dense(units_dense_layer_4, activation=activation_dense_layer_4),
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
TypeError: add() got an unexpected keyword argument 'activity_regularizer'
'property' object is not iterable
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 190, in build_and_compile
    classifier_.compile(optimizer=optimizer_function, loss=losses_list, metrics=metrics_list)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 325, in compile
    self._validate_compile(optimizer, metrics, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 1598, in _validate_compile
    for v in getattr(metric, 'variables', []):
TypeError: 'property' object is not iterable
This model has not yet been built. Build the model first by calling `build()` or calling `fit()` with some data, or specify an `input_shape` argument in the first layer(s) for automatic build.
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 192, in build_and_compile
    classifier_.summary()
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\network.py", line 1346, in summary
    raise ValueError('This model has not yet been built. '
ValueError: This model has not yet been built. Build the model first by calling `build()` or calling `fit()` with some data, or specify an `input_shape` argument in the first layer(s) for automatic build.
Input 0 of layer conv2d is incompatible with the layer: expected ndim=4, found ndim=3. Full shape received: [512, 512, 3]
Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 189, in build_and_compile
    classifier_.build(input_shape=(input_shape_y, input_shape_x, nof_channels))
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py", line 266, in build
    super(Sequential, self).build(input_shape)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\network.py", line 685, in build
    self.call(x, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py", line 291, in call
    outputs = layer(inputs, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 885, in __call__
    input_spec.assert_input_compatibility(self.input_spec, inputs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py", line 176, in assert_input_compatibility
    raise ValueError('Input ' + str(input_index) + ' of layer ' +
ValueError: Input 0 of layer conv2d is incompatible with the layer: expected ndim=4, found ndim=3. Full shape received: [512, 512, 3]
Negative dimension size caused by subtracting 3 from 2 for '{{node conv2d_2/Conv2D}} = Conv2D[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true](dropout_1/Identity, conv2d_2/Conv2D/ReadVariableOp)' with input shapes: [?,2,2,32], [3,3,32,32].
Traceback (most recent call last):
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 1654, in _create_c_op
    c_op = pywrap_tf_session.TF_FinishOperation(op_desc)
tensorflow.python.framework.errors_impl.InvalidArgumentError: Negative dimension size caused by subtracting 3 from 2 for '{{node conv2d_2/Conv2D}} = Conv2D[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true](dropout_1/Identity, conv2d_2/Conv2D/ReadVariableOp)' with input shapes: [?,2,2,32], [3,3,32,32].

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 169, in build_and_compile
    classifier_.add(layers.Conv2D(units_layer_3,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py", line 213, in add
    output_tensor = layer(self.outputs[0])
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 922, in __call__
    outputs = call_fn(cast_inputs, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\convolutional.py", line 207, in call
    outputs = self._convolution_op(inputs, self.kernel)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 1106, in __call__
    return self.conv_op(inp, filter)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 638, in __call__
    return self.call(inp, filter)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 231, in __call__
    return self.conv_op(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 2006, in conv2d
    return gen_nn_ops.conv2d(input,  # pylint: disable=redefined-builtin
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_nn_ops.py", line 965, in conv2d
    _, _, _op, _outputs = _op_def_library._apply_op_helper(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py", line 742, in _apply_op_helper
    op = g._create_op_internal(op_type_name, inputs, dtypes=None,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 593, in _create_op_internal
    return super(FuncGraph, self)._create_op_internal(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 3319, in _create_op_internal
    ret = Operation(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 1816, in __init__
    self._c_op = _create_c_op(self._graph, node_def, inputs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 1657, in _create_c_op
    raise ValueError(str(e))
ValueError: Negative dimension size caused by subtracting 3 from 2 for '{{node conv2d_2/Conv2D}} = Conv2D[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true](dropout_1/Identity, conv2d_2/Conv2D/ReadVariableOp)' with input shapes: [?,2,2,32], [3,3,32,32].
Negative dimension size caused by subtracting 3 from 2 for '{{node conv2d_2/Conv2D}} = Conv2D[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true](dropout_1/Identity, conv2d_2/Conv2D/ReadVariableOp)' with input shapes: [?,2,2,32], [3,3,32,32].
Traceback (most recent call last):
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 1654, in _create_c_op
    c_op = pywrap_tf_session.TF_FinishOperation(op_desc)
tensorflow.python.framework.errors_impl.InvalidArgumentError: Negative dimension size caused by subtracting 3 from 2 for '{{node conv2d_2/Conv2D}} = Conv2D[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true](dropout_1/Identity, conv2d_2/Conv2D/ReadVariableOp)' with input shapes: [?,2,2,32], [3,3,32,32].

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 169, in build_and_compile
    classifier_.add(layers.Conv2D(units_layer_3,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py", line 213, in add
    output_tensor = layer(self.outputs[0])
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 922, in __call__
    outputs = call_fn(cast_inputs, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\convolutional.py", line 207, in call
    outputs = self._convolution_op(inputs, self.kernel)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 1106, in __call__
    return self.conv_op(inp, filter)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 638, in __call__
    return self.call(inp, filter)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 231, in __call__
    return self.conv_op(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 2006, in conv2d
    return gen_nn_ops.conv2d(input,  # pylint: disable=redefined-builtin
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_nn_ops.py", line 965, in conv2d
    _, _, _op, _outputs = _op_def_library._apply_op_helper(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py", line 742, in _apply_op_helper
    op = g._create_op_internal(op_type_name, inputs, dtypes=None,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 593, in _create_op_internal
    return super(FuncGraph, self)._create_op_internal(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 3319, in _create_op_internal
    ret = Operation(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 1816, in __init__
    self._c_op = _create_c_op(self._graph, node_def, inputs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 1657, in _create_c_op
    raise ValueError(str(e))
ValueError: Negative dimension size caused by subtracting 3 from 2 for '{{node conv2d_2/Conv2D}} = Conv2D[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true](dropout_1/Identity, conv2d_2/Conv2D/ReadVariableOp)' with input shapes: [?,2,2,32], [3,3,32,32].
Negative dimension size caused by subtracting 3 from 2 for '{{node conv2d_3/Conv2D}} = Conv2D[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true](dropout_2/Identity, conv2d_3/Conv2D/ReadVariableOp)' with input shapes: [?,2,2,32], [3,3,32,32].
Traceback (most recent call last):
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 1654, in _create_c_op
    c_op = pywrap_tf_session.TF_FinishOperation(op_desc)
tensorflow.python.framework.errors_impl.InvalidArgumentError: Negative dimension size caused by subtracting 3 from 2 for '{{node conv2d_3/Conv2D}} = Conv2D[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true](dropout_2/Identity, conv2d_3/Conv2D/ReadVariableOp)' with input shapes: [?,2,2,32], [3,3,32,32].

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "./5.2_CUSTOM_LIBRARY\custom_model_builder.py", line 176, in build_and_compile
    classifier_.add(layers.Conv2D(units_layer_4,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py", line 213, in add
    output_tensor = layer(self.outputs[0])
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 922, in __call__
    outputs = call_fn(cast_inputs, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\convolutional.py", line 207, in call
    outputs = self._convolution_op(inputs, self.kernel)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 1106, in __call__
    return self.conv_op(inp, filter)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 638, in __call__
    return self.call(inp, filter)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 231, in __call__
    return self.conv_op(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py", line 2006, in conv2d
    return gen_nn_ops.conv2d(input,  # pylint: disable=redefined-builtin
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_nn_ops.py", line 965, in conv2d
    _, _, _op, _outputs = _op_def_library._apply_op_helper(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py", line 742, in _apply_op_helper
    op = g._create_op_internal(op_type_name, inputs, dtypes=None,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 593, in _create_op_internal
    return super(FuncGraph, self)._create_op_internal(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 3319, in _create_op_internal
    ret = Operation(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 1816, in __init__
    self._c_op = _create_c_op(self._graph, node_def, inputs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 1657, in _create_c_op
    raise ValueError(str(e))
ValueError: Negative dimension size caused by subtracting 3 from 2 for '{{node conv2d_3/Conv2D}} = Conv2D[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true](dropout_2/Identity, conv2d_3/Conv2D/ReadVariableOp)' with input shapes: [?,2,2,32], [3,3,32,32].
